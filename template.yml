AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

Description: >
  Code Scanning to Slack

Resources: 
  AccessLogs: 
    Type: "AWS::Logs::LogGroup"

  CodeScanningToSlack: 
    Type: "AWS::Serverless::Function"
    Properties: 
      CodeUri: functions/codeScanningToSlack
      Description: "A Lambda that connects GitHub Code Scanning Results to a Slack Channel"
      Environment: 
        Variables: 
          NODE_ENV: Production
          REGION: us-east-1
      Events: 
        GatewayEndpoint: 
          Properties: 
            ApiId: !Ref HttpApi
            Method: POST
            Path: /codescanning
          Type: HttpApi
      Handler: lib/main.handler
      Policies:
        - AmazonSSMReadOnlyAccess
      Runtime: nodejs14.x
      Timeout: 60
      Tracing: Active

  GitHubWebhookIPValidator:
    Type: "AWS::Serverless::Function"
    Properties: 
      CodeUri: functions/GitHubWebhookIPValidator
      Description: "A Lambda Function that validates the IP comes from GitHub."
      Environment: 
        Variables: 
          NODE_ENV: Production
          REGION: us-east-1
      Handler: lib/main.handler
      Policies:
        - AmazonSSMReadOnlyAccess
      Runtime: nodejs14.x
      Timeout: 60
      Tracing: Active

  HttpApi: 
    Type: "AWS::Serverless::HttpApi"
    Properties: 
      AccessLogSettings: 
        DestinationArn: !GetAtt AccessLogs.Arn
        Format: >-
          { "requestId":"$context.requestId","ip": "$context.identity.sourceIp",
          "requestTime":"$context.requestTime","httpMethod":"$context.httpMethod",
          "routeKey":"$context.routeKey","status":"$context.status",
          "protocol":"$context.protocol","responseLength":"$context.responseLength",
          "error" : $context.authorizer.error }
      Auth: 
        Authorizers: 
          LambdaAuthorizer: 
            AuthorizerPayloadFormatVersion: "2.0"
            EnableSimpleResponses: true
            FunctionArn: !GetAtt GitHubWebhookIPValidator.Arn
            Identity: 
              Headers: 
                - X-Hub-Signature
        DefaultAuthorizer: LambdaAuthorizer
      RouteSettings:
        "POST /codescanning":
          ThrottlingBurstLimit: 10

  InvokeAuth:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt GitHubWebhookIPValidator.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:${AWS::Partition}:apigateway:${AWS::Region}::/apis/${HttpApi}'

Outputs:
  HttpApiUrl:
    Description: URL of your API endpoint
    Value:
      Fn::Sub: 'https://${HttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/'
  HttpApiId:
    Description: Api id of HttpApi
    Value:
      Ref: HttpApi
  HttpApiARN:
    Description: Api id of HttpApi
    Value: !Sub 'arn:${AWS::Partition}:apigateway:${AWS::Region}::/apis/${HttpApi}'


